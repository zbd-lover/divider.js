!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((e="undefined"!=typeof globalThis?globalThis:e||self).divider={})}(this,(function(e){"use strict";var n=Object.prototype.toString;function r(e){if(null==e)return"undefined";var r=n.call(e).slice(8,-1).toLowerCase();switch(r){case"string":case"number":case"boolean":case"array":case"symbol":case"function":return r;default:return"object"}}var t={enabled:[!0,!1],error:[!0,!1],interval:[1e3,1e3],tolerance:[3,3]};function o(e){var n={};for(var r in t)n[r]=t[r][e];return n}function c(){return o(0)}function i(){var e;try{e="production"===process.env.NODE_ENV?c():o(1)}catch(n){e=c()}if(!e.enabled)return null;var n,r=[],t=100,i=new Array(100).fill(0);function u(){r.length=100}return setTimeout((function(){return n=setInterval((function(){return function(){if(r.length>=t)return void clearInterval(n);if(r.forEach((function(e,n){0!==e[0]||1===e[1]?i[n]=0:i[n]++})),i.some((function(n){return n>=e.tolerance}))&&r.length<t){var o="\n        You maybe forget to call 'notify' in 'process' function.\n        It's maybe make bad effect for your 'hook for dispatch',\n        or source is 'sequence', yet.\n      ";if(u(),e.error)throw new Error(o);console.warn(o)}}()}),e.interval)}),500),{collect:function(e,n){r[e]||(r[e]=[]),r[e][n]=n},destroy:u}}var u=[["before",0],[0,0],["0",0],["after",1],[1,1],["1",1],["interrupt",2],["2",2],[2,2]];function a(e){var n=function(e){var n=u.filter((function(n){return n[0]===e})).map((function(e){return e[1]}));if(1===n.length)return n[0]}(e);if("undefined"===r(n))throw new Error('\n      Invalid tag, expected:\n      "before", "0", 0, "after", "1", 1, "interrupt", "2", 2.\n      Instead, received: '.concat(e,"\n    "));return n}function f(e){return e.reduce((function(e,n){return e.concat(n)}),[])}var s={system:0,observer:1,user:2},d={observer:0,user:1,system:2},l={observer:0,user:1,system:2};e.createSource=function(e,n){if("function"!==r(e))throw new Error("Expected the process as a function. Instead, received: ".concat(r(e)));var t=i(),o=!1,c=[];function u(e){return c.find((function(n){return n[0]===e}))}function h(e){return!!u(e)}var p=[[],[],[]],v=0;function y(i){if("string"!==r(i)||!i)throw new Error("\n        Expected the type as a string and not empty.\n        Instead, type received:".concat(r(i),", value received:").concat(i,"\n      "));if(!h(i)){var u=function(e){var n=[[[],[],[]],[[],[],[]],[[],[],[]]],t=e,o=!1,c=!1;function i(){return!c||(c=!1,o=!1,!1)}return{hook:function(e,t,o){var c=a(e);if("function"!==r(t))throw new Error("\n        Expected the fn as a function. Instead, received: ".concat(r(t),".\n      "));var i=n[c][o].length;n[c][o].push(t);var u=!1;return function(){!u&&n[c][o].length>=i&&(u=!0,n[c][o][i]=function(){})}},reset:function(){o=!1,c=!1,n=[[[],[],[]],[[],[],[]],[[],[],[]]]},interrupt:function(){o?(c=!0,f(n[3]).forEach((function(e){return e(t)}))):console.warn("State Machine can be interrupted only after working or before ended.")},startWork:function(e){if(i(),o)throw new Error("SM named ".concat(t," has started work!"));f(n[0]).forEach((function(n){return n(e)})),o=!0},endWork:function(e,r){if(i()){if(!o)throw new Error("SM named ".concat(t," has ended work!"));o=!1,f(n[1]).forEach((function(n){return n(e,r)}))}}}}(i),y=v++;return u.hook("before",(function(){o=!0,t&&t.collect(y,0),n&&(o=!1)}),s.system),p[0].forEach((function(e){return u.hook("before",e,s.observer)})),u.hook("after",(function(){t&&t.collect(y,1),n||(o=!1)}),s.system),p[1].forEach((function(e){return u.hook("after",e,d.observer)})),u.hook("interrupt",(function(e){console.log("Action named '".concat(e,"' is interrupted before worked completely.")),t&&t.collect(y,1),o=!1}),l.system),p[2].forEach((function(e){return u.hook("interrupt",e,l.observer)})),function(e,n,r){c.push([e,n,r])}(i,u,w),w}function w(r){if(!n&&o)throw new Error("\n          Can't dispatch action while sequence source is being processed,\n          if 'discrete dispatch' is expected, pass 'true' to parameter\n          called 'discrete' of 'createSource'.\n          The current type is ".concat(i,".\n        "));var t={type:i,payload:r};u.startWork(t),e(t,(function(e){return u.endWork(e,t)}))}console.warn("The dispatch of type has existed: ".concat(i))}return{observe:function(e,n,t){return"function"===r(n)&&"undefined"!==r(e)&&"undefined"===r(t)?function(e,n){var r=a(e);p[r].push(n)}(e,n):function(e,n,r){if(!h(e))return void console.warn("Cant't observe action before created, the action's type is ".concat(e,"."));var t=a(n),o=c.find((function(n){return n[0]===e})),i=0;switch(t){case 0:i=s.user;break;case 1:i=d.user;break;case 2:i=l.user}return o[1].hook(n,(function(n,o){var c=0===t,i=1===t;2==t&&n===e?r(e):c?r(n):i?r(n,o):console.warn("Unknown index: ".concat(t,", this means unknown hook."))}),i)}(e,n,t)},isDiscrete:function(){return!!n},isWaiting:function(){return o},reset:function(){c.forEach((function(e){return e[1].reset()})),c=[],t&&t.destroy(),t=i(),p=[[],[],[]],o=!1},hasType:h,dispatch:function(e){var n;return(n=h(e.type)?function(e){var n=u(e);if(n)return n[2]}(e.type):y(e.type))(e.payload),n},interrupt:function(e){var n=u(e);n?n[1].interrupt():console.warn("Doesn't exist the type named ".concat(e,". can't interrupt"))},createDispatch:y,createDispatches:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return n.map((function(e){return y(e)}))}}},Object.defineProperty(e,"__esModule",{value:!0})}));
