var n=Object.prototype.toString;function r(r){if(null==r)return"undefined";var e=n.call(r).slice(8,-1).toLowerCase();switch(e){case"string":case"number":case"boolean":case"array":case"symbol":case"function":return e;default:return"object"}}var e={enabled:[!0,!1],error:[!0,!1],interval:[1e3,1e3],tolerance:[3,3]};function t(n){var r={};for(var t in e)r[t]=e[t][n];return r}function o(){return t(0)}function c(){var n;try{n="production"===process.env.NODE_ENV?o():t(1)}catch(r){n=o()}if(!n.enabled)return null;var r,e=[],c=100,i=new Array(100).fill(0);return setTimeout((function(){return r=setInterval((function(){return function(){if(e.length>=c)return void clearInterval(r);if(e.forEach((function(n,r){0!==n[0]||1===n[1]?i[r]=0:i[r]++})),i.some((function(r){return r>=n.tolerance}))){var t="\n        You maybe forget to call 'notify' in 'process' function.\n        It's maybe make bad effect for your 'hook for dispatch',\n        or source is 'sequence', yet.\n      ";if(e.length=c,n.error)throw new Error(t);console.warn(t)}}()}),n.interval)}),500),{collect:function(n,r){e[n]||(e[n]=[]),e[n][r]=r}}}var i=[["before",0],[0,0],["0",0],["after",1],[1,1],["1",1],["create",2],["2",2],[2,2]];function a(n){var e=function(n){var r=i.filter((function(r){return r[0]===n})).map((function(n){return n[1]}));if(1===r.length)return r[0]}(n);if("undefined"===r(e))throw new Error('\n      Invalid tag.Expected: "before", "0", 0, "after", "1", 1, "create", "2", 2. Instead, received: '.concat(n,"\n    "));return e}function u(n){return n.reduce((function(n,r){return n.concat(r)}),[])}function f(n,e){if("function"!==r(n))throw new Error("Expected the process as a function. Instead, received: ".concat(r(n)));var t=c(),o=!1,i=[];function f(n){return!!i.find((function(r){return r[0]===n}))}var s=[[],[],[]];var d=[];function h(n,r,e){if(!f(n))return d.push({type:n,tag:r,fn:e}),n;var t=a(r),o=i.find((function(r){return r[0]===n})),c=0===t,u=2===t;return o[1].hook(r,(function(r,t){u&&r===n?e(n):(c&&(t=r),t.type===n&&(c?e(t):e(r,t)))}),u?1:c?2:1),n}function l(n){if(f(n)){var r=d.findIndex((function(r){return r.type===n}));if(!(r<0)){var e=d.splice(r,1)[0],t=e.tag,o=e.fn;h(n,t,o),l(n)}}}var p=0;function v(c){if("string"!==r(c)||!c)throw new Error("\n        Expected the type as a string and not empty.\n        Instead, type received".concat(r(c),", value received:").concat(c,"\n      "));if(i.find((function(n){return n[0]===c})))throw new Error("The type has existed: ".concat(c));var f=function(n,e,t){for(var o=[[],[],[]],c=n,i=!1,f=1;f<=e;f++)o[0].push([]),o[1].push([]),o[2].push([]);var s={hook:function(n,e,t){var c=a(n);if("function"!==r(e))throw new Error("\n        Expected the fn as a function. Instead, received: ".concat(r(e),".\n      "));o[c][t].push(e)},startWork:function(n){if(i)throw new Error("SM named ".concat(c," has started work!"));i=!0,u(o[0]).forEach((function(r){return r(n)}))},endWork:function(n,r){if(!i)throw new Error("SM named ".concat(c," has ended work!"));i=!1,u(o[1]).forEach((function(e){return e(n,r)}))}};return t(s),u(o[2]).forEach((function(n){return n(c)})),s}(c,3,(function(n){s[2].forEach((function(r){return n.hook("create",r,0)})),i.push([c,n]),l(c)})),d=p++;f.hook("after",(function(){t&&t.collect(d,1),e||(o=!1)}),2),s[1].forEach((function(n){return f.hook("after",n,0)}));return f.hook("before",(function(){o=!0,t&&t.collect(d,0),e&&(o=!1)}),0),s[0].forEach((function(n){return f.hook("before",n,1)})),function(r){if(!e&&o)throw new Error("\n          Can't dispatch action while sequence source is being processed,\n          if 'discrete dispatch' is expected, pass 'true' to parameter\n          called 'discrete' of 'createSource'.\n          The current type is ".concat(c,".\n        "));var t={type:c,payload:r};f.startWork(t),n(t,function(n){return function(r){return f.endWork(r,n)}}(t))}}return{observe:function(n,e,t){if("function"!==r(e)||"undefined"===r(n)||"undefined"!==r(t))return h(n,e,t);!function(n,r){var e=a(n);s[e].push(r)}(n,e)},isDiscrete:function(){return!!e},isWaiting:function(){return o},hasType:f,createDispatch:v,createDispatches:function(){for(var n=arguments.length,r=new Array(n),e=0;e<n;e++)r[e]=arguments[e];return r.map((function(n){return v(n)}))}}}export{f as createSource};
